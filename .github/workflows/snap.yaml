name: Build and Publish Snap

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]
    paths:
      - 'snapcraft.yaml'
      - '.github/workflows/snap.yaml'
  workflow_dispatch:

jobs:
  build-snap:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install snapcraft
        run: |
          sudo snap install snapcraft --classic

      - name: Build snap
        run: |
          snapcraft --verbose

      - name: Upload snap artifact
        uses: actions/upload-artifact@v4
        with:
          name: gthulhu-snap
          path: "*.snap"

  publish-snap:
    needs: build-snap
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download snap artifact
        uses: actions/download-artifact@v4
        with:
          name: gthulhu-snap

      - name: Install snapcraft
        run: |
          sudo snap install snapcraft --classic

      - name: Release to edge channel
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}
        run: |
          snapcraft upload --release=edge *.snap

      - name: Release to beta channel
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}
        if: "!contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')"
        run: |
          snapcraft upload --release=beta *.snap

      - name: Release to candidate channel
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}
        if: "!contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')"
        run: |
          snapcraft upload --release=candidate *.snap

      - name: Release to stable channel
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}
        if: "!contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')"
        run: |
          snapcraft upload --release=stable *.snap